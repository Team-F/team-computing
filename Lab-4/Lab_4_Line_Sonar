/*-------------------------------------------------------------------------------------------------------------
Program Description:			Robot moves forward tracking a black line until its sonar sensor is activated
					it then moves around the object and continues on its way
Author:					Seamus de Cleir and Dylan Crosbie
Date:					11/02/2015
-------------------------------------------------------------------------------------------------------------*/
#pragma config(Sensor, S2,     lightSensor,    sensorLightActive)
#pragma config(Sensor, S4,     sonarSensor,    sensorSONAR)
#pragma config(Motor,  motorA,          leftMotor,     tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorC,          rightMotor,    tmotorNXT, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

//Prototypes
void motorControl(int, int, int);
void lineTrack(int);
int lightThreshold(int, int);

task main()
{
	//Declarations
	int thresh = lightThreshold(60, 40);
	int forward = 50;
	int reverse = -50;
	int stop = 0;

	//Code Body
	while (SensorValue(sonarSensor) > 10)		//Robot moves forward folloeing a line until it dectects an object within 10cm
	{
		lineTrack(thresh);
	}//End of while

	motorControl(reverse, stop, 370);		//Turns Robot

	motorControl(stop, stop, 100);			//Stops robot

	motorControl(forward, forward, 1200);		//Moves robot forward for 1200ms

	motorControl(stop, stop, 100);			//Stops robot

	motorControl(stop, reverse, 700);		//Turns Robot
	
	motorControl(stop, stop, 100);			//Stops robot

	motorControl(forward, forward, 2500);		//Moves Robot forward for 2500ms. Back on to the line

	while (1 == 1)		
	{
		lineTrack(thresh);
	}


}//End of main

//lineTrack Function
void lineTrack(int threshold){

	while (SensorValue(lightSensor) <= threshold)		//Tracks the black line by moving over and back until it is detected
	{
		motor[leftMotor] = 25;
		motor[rightMotor] = 0;
	}//End of While

	while (SensorValue(lightSensor) >= threshold)
	{
		motor[leftMotor] = 0;
		motor[rightMotor] = 25;
	}//End of while

}//End of lineTrack

//lightThreshold function
int lightThreshold(dark int, light int){	//Calculates the light threshold
	//Declarations
	int t = o;

	//Code Body
	t = (dark + light) / 2;
}//End of lightThreshold

//motorControl Function
void motorControl(int left, int right, int t){
	motor[leftMotor] = left;		//Sets both motors to variable speed with a wait time of variable t
	motor[rightMotor] = right;
	wait1Msec(t);
}//End of motorControl
